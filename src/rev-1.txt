* Manejo del DOM */
// FETCH
fetch('https://raw.githubusercontent.com/GelenMR/SCL009-data-lovers/master/src/data/pokemon/pokemon.json')
  .then(response => response.json())
  .then(data => {
    const dataPokemon = data.pokemon;
    console.log(dataPokemon);
    //DECLARAMOS NUESTRAS VARIABLES
    //const dataPokemon = window.POKEMON.pokemon;
    const btnSearchName = document.getElementById("btnSearchName");
    const filterType = document.getElementById("filterType");
    const filterEggs = document.getElementById("filterEggs");
    const filterWeakness = document.getElementById("filterWeakness");
    const order = document.getElementById("order")
    let card='';
    let pokemonCard ='';
    let searchName='';
    let pokePercent = "";

    //CONTENEDOR DONDE MOSTRAREMOS LA INFO
    const showAll = document.getElementById("root");
    const resultPercent = document.getElementById("containerPercent");
    //const resultChart = document.getElementById("myChart").getContext("2d");

    // INFORMACIÓN DENTRO DE LA TARJETA
    const createCards = (data) => {
      data.forEach((element) => {
        card = `
        <div class="card bg" style="width: 17rem">
          <div class="card-body">
          <img src="${element.img}" /><br>
          <b>Nº </b>${element.num} <br>
          <h4>${element.name} </h4>
          <b>Tipo </b><br> ${element.type+" "} <br>
          <b>Debilidades </b><br> ${element.weaknesses+" "}<br>
          <b>Altura: </b> ${element.height} <br>
          <b>Peso: </b> ${element.weight} <br>
          <b>Huevos </b><br> ${element.egg} <br>
          <b>Candies</b><br> ${element.candy} <br>
          </div>
        </div>`
        pokemonCard += card;
      });
      showAll.innerHTML = pokemonCard;
    };
    // LLAMADO A LA FUNCIÓN QUE CREA LA CARD: EL PARÁMETRO (DATAPOKEMON)
    createCards(dataPokemon);

    // FILTRO POR TIPOS
    filterType.addEventListener("click", (event) => {
      pokemonCard="";
      resultPercent.innerHTML = "";
      //resultChart.innerHTML = "";
      let condition = event.target.text;
      pokePercent = window.filterData.type(dataPokemon,condition);
      resultPercent.innerHTML = `
        <div  class="bg-percentage">
          <h2>El Porcentaje de Pokemones de Tipo <b>${condition}</b> es de <b>${window.calcPercent(pokePercent, dataPokemon)}%</b></h2>
        </div>`
      createCards(pokePercent);
      // IMPRIMIR EL CHART ACA
      //resultChart.innerHTML = "";
    });

    // FILTRO POR HUEVOS
    filterEggs.addEventListener("click", (event) => {
      pokemonCard = "";
      resultPercent.innerHTML = "";
      //resultChart.innerHTML = "";
      let condition = event.target.text;
      pokePercent = window.filterData.eggs(dataPokemon, condition);
      resultPercent.innerHTML = `
        <div  class="bg-percentage">
          <h2>El Porcentaje de Pokemones con Huevos de <b>${condition}</b> es de <b>${window.calcPercent(pokePercent, dataPokemon)}%</b></h2>
        </div>`
      createCards(pokePercent);
      // IMPRIMIR EL CHART ACA
      //resultChart.innerHTML = "";
    });

    // FILTRO POR DEBILIDADES
    filterWeakness.addEventListener("click", (event) => {
      pokemonCard = "";
      resultPercent.innerHTML = "";
      //resultChart.innerHTML = "";
      let condition = event.target.text;
      pokePercent = window.filterData.weakness(dataPokemon, condition);
      resultPercent.innerHTML = `
        <div  class="bg-percentage">
          <h2>El Porcentaje de Pokemones con Debilidad de <b>${condition}</b> es de <b>${window.calcPercent(pokePercent, dataPokemon)}%</b></h2>
        </div>`
      createCards(pokePercent);
      // IMPRIMIR EL CHART ACA
      //resultChart.innerHTML = "";
    });

    // BUSCAR POKEMONS POR NOMBRE y/o NUMERO
    btnSearchName.addEventListener("click", () => {
      pokemonCard = "";
      resultPercent.innerHTML = "";
      event.preventDefault();
      searchName = document.getElementById("searchName").value;
      if (isNaN(searchName) === true) {
        searchName = firstMay(searchName.toLowerCase());
        createCards(window.searchData.name(dataPokemon, searchName));
      } else {
        createCards(window.searchData.num(dataPokemon, searchName));    
      }   
    });
    //VALIDACIÓN CAMPO NOMBRE 
    let firstMay = (string) => {
      return string.charAt(0).toUpperCase() + string.slice(1);
    };

    // ORDENAR POR NOMBRE ASCENDENTE
    order.addEventListener("click",(event) => {
      pokemonCard = "";
      resultPercent.innerHTML = "";
      let orderSelect = event.target.text;
      let resultOrder = [];
      if (orderSelect === "Nombre: A-Z"){
        resultOrder.push(window.sortData(dataPokemon, "name", "asc")); 
      }
      if (orderSelect === "Nombre: Z-A"){
        resultOrder.push(window.sortData(dataPokemon, "name", "desc"));
      }
      if (orderSelect === "Número: Ascendente"){
        resultOrder.push(window.sortData(dataPokemon, "num", "numasc"));
      }
      if (orderSelect === "Número: Descendente"){
        resultOrder.push(window.sortData(dataPokemon, "num", "numdesc"));
      }
      createCards (dataPokemon);
    });

    // CARGAR INDEX
    document.getElementById('index').addEventListener('click', () => {
      location.reload();
    });
  });

  _____________________________


   // /* Manejo del DOM */
 const arrBtn = ['Fire', 'Bug', 'Water', 'Fighting', 'Poison', 'Ground', 'Fairy', 'Rock', 'Ghost', 'Ice', 'Electric', 'Steel', 'Dragon', 'Flying', 'Grass', 'Dark', 'Psychic', 'Normal'];
 let card = '';
 let modal = '';
 let btnType = '';
 let btnWeak = '';
 let btnFilters = '';
 let buscadorNombre = '';
 google.load('visualization', '1.0', { 'packages': ['corechart'] });
 window.onload
 fetch('https://raw.githubusercontent.com/natiacostap/SCL009-data-lovers/master/src/data/pokemon/pokemon.json').then((response) => {
     return response.json();
 }).then((data) => {
     const listaPokemones = data.pokemon;
     //
     let datatype = listaPokemones;
     //
     const imprimir = (arr) => {
         createCards(arr);
         createModal(arr);
         createBtnOfWeak(arr);
         createBtnOfType(arr);
         createEvolution(arr);
     };
     // creamos tarjetas          
     const createCards = (arr) => {
         arr.forEach((element) => {
             card += `<div class="card">
                     <img class="${element.type[0]}" alt="foto-pokemon" class="card-img-top" src=${element.img}>
                     <div class = "card-body">
                         <h5 class = "card-title">
                             ${element.name}
                         </h5>
                         <p class="card-text">
                             Nº${element.num}
                         </p>
                         <a class = "btn btn-primary btn-tarjeta" data-target="#modal${element.id}" data-toggle="modal" href="#">
                         <i class="fas fa-angle-double-right"></i></i><span class="descripcion">Ver</span>
                         </a>
                     </div>
                 </div>`;
         })
         document.getElementById('tarjetas').innerHTML = card;
     }
     // creamos modales de tarjetas
     const createModal = (arr) => {
         arr.forEach((element) => {
             if (element.candy_count === undefined) {
                 element.candy_count = 'No come candies'
             }
             if (element.egg === 'Not in Eggs') {
                 element.egg = 'No nace en huevos'
             }
             modal += `<div aria-hidden="true" aria-labelledby="exampleModalCenterTitle" class="modal fade" id="modal${element.id}" role="dialog" tabindex="-1">
                     <div class="modal-dialog modal-dialog-centered" role="document">
                         <div class="modal-content">
                             <div class="modal-header ${element.type[0]}">
                                 <ul>
                                     <li>
                                     </li>
                                 </ul>
                                 <h4 class="modal-title" id="exampleModalLongTitle">
                                 ${element.name} N° ${element.num} 
                                 </h4>
                                 <button aria-label="Close" class="close" data-dismiss="modal" type="button">
                                     <span aria-hidden="true">
                                         ×
                                     </span>
                                 </button>
                             </div>
                             <div class="modal-body">
                                 <div class="grid">
                                     <div class="row row__modal">
                                         <div class="col-md-4">
                                             <img alt="pokemon" class="imagen-pokemon" src="${element.img}"/>
                                         </div>
                                         <div class="col-md-8 pokeinfo">
                                             <ul>
                                                 <li>
                                                     <i class="fas fa-arrows-alt-v">
                                                     </i><span class="descripcion">Altura: </span>
                                                     ${element.height}
                                                 </li>
                                                 <li>
                                                     <i class="fas fa-weight "> 
                                                     </i><span class="descripcion">Peso:</span>
                                                     ${element.weight}
                                                 </li>
                                                 <li>
                                                     <i class="fas fa-candy-cane"> 
                                                     </i><span class="descripcion">Candy:</span>
                                                     ${element.candy_count}
                                                 </li>
                                                 <li>
                                                     <i class="fas fa-egg">
                                                     </i> <span class="descripcion">Huevos:</span>
                                                     ${element.egg}
                                                 </li>
                                             </ul>
                                         </div>
                                     </div>
                                     <h5>
                                         Evoluciones:
                                     </h5>
                                     <div class="row container" id="evoluciones${element.id}">
                                         <p class="container p__nombre">
                                           - No tiene más evoluciones -
                                         </p>
                                     </div>
                                     <div class="tipos__debilidades">
                                        <h5>
                                             Tipos:
                                         </h5>
                                         <div id="type${element.id}">
                                         </div>
                                     </div>
                                     <div class="tipos__debilidades">
                                        <h5>
                                            Debilidades:
                                         </h5>
                                         <div id= "weak${element.id}"> 
                                         </div>
                                     </div>
                                 </div>
                             </div>
                         </div>
                     </div>
                 </div>`
         })
         document.getElementById('modal').innerHTML = modal;
     }
     // creamos botones de debilidades dentro de modal
     const createBtnOfWeak = (arr) => {
         arr.forEach((element) => {
             element.weaknesses.forEach((weakness) => {
                 btnWeak += `<button value="${weakness}"  class="btnWeakModal btn btn-primary ${weakness} filter-list" href="#">
                             ${weakness}
                         </button>`;
             });
             document.getElementById(`weak${element.id}`).innerHTML = btnWeak;
             btnWeak = '';
         })
         let x = document.getElementsByClassName('btnWeakModal');
         for (let i = 0; i < x.length; i++) {
             x[i].addEventListener('click', () => {
                 let valor = x[i].value;
                 datatype = window.filterWeak(listaPokemones, valor);
                 vaciar();
                 imprimir(datatype);
                 document.getElementById('calculo-agregado').innerHTML = '';
             })
         }
     }
     // creamos botones de tipos dentro de modal
     const createBtnOfType = (arr) => {
         arr.forEach((element) => {
             element.type.forEach((element) => {
                 btnType += `<button value="${element}" class="btnTypeModal btn btn-primary filter-list ${element}" href="">
                             ${element}
                         </button>`;
             });
             document.getElementById(`type${element.id}`).innerHTML = btnType;
             btnType = '';
         })
         let x = document.getElementsByClassName('btnTypeModal');
         for (let i = 0; i < x.length; i++) {
             x[i].addEventListener('click', () => {
                 let valor = x[i].value;
                 datatype = window.filterType(listaPokemones, valor);
                 vaciar();
                 imprimir(datatype);
                 let porcentaje = window.percent(datatype);
                 document.getElementById('calculo-agregado').innerHTML = `<p id="porcentaje" class="${valor}">El ${porcentaje}% de los pokemones de la región Kanto son de tipo ${valor}.</p>`;
             })
         }
     }
     // crear botones de filtros dinamicamente
     const createBtnOfFilters = (arr) => {
         arr.forEach((element) => {
             btnFilters += ` <li id="${element}" value="${element}" class="btn btn-primary filter-list ${element}" href="">
                                             ${element}
                         </li>`;
         })
         printFilterType(arrBtn);
     };
     //imprimir resultado de filtrado por tipos
     const printFilterType = (arr) => {
         document.getElementById('botonesFiltros').innerHTML = btnFilters;
         arr.forEach((element) => {
             document.getElementById(`${element}`).addEventListener('click', () => {
                 datatype = window.filterType(listaPokemones, `${element}`);
                 vaciar();
                 imprimir(datatype);
                 let porcentaje = window.percent(datatype);
                 document.getElementById('calculo-agregado').innerHTML = `<p id="porcentaje" class="${element}">El ${porcentaje}% de los pokemones de la región Kanto son de tipo ${element}.</p>`;
                 document.getElementById('noFound').innerHTML = '';

                });
         })
     }
     //imprimir evolution
     let evolution = '';
     const createEvolution = (arr) => {
         const arrayEvolution = arr.filter(element => (element.next_evolution));
         arrayEvolution.forEach((element) => {
             let nombre;
             element.next_evolution.forEach(element => {
                 nombre = element.name;
                 let dataNombre = window.filterName(listaPokemones, nombre);
                 evolution += `<div class="col-md-6 col-sm-6">
                <p class="p__nombre">${element.name}:</p><center><button class="pokemones" value="${element.name}" href=""><img src=${dataNombre[0].img}></button></center>
            </div>
           `
             });
             document.getElementById(`evoluciones${element.id}`).innerHTML = evolution;
             evolution = '';
         });
         let x = document.getElementsByClassName('pokemones');
         for (let i = 0; i < x.length; i++) {
             x[i].addEventListener('click', () => {
                 let valor = x[i].value;
                 datatype = window.filterName(listaPokemones, valor);
                 vaciar();
                 imprimir(datatype);
             })
         }
     };
     //
     imprimir(listaPokemones);
     createBtnOfFilters(arrBtn);
     //
     const vaciar = () => {
         card = '';
         modal = '';
         btnType = '';
         btnWeak = '';
         evolution = '';
     }
     //ordenamos la data
     let a = document.getElementById('order');
     let ordered;
     a.addEventListener('change', () => {
         let option = a.value;
         if (option === 'AZ') {
             ordered = window.sortData(datatype, 'name', 'asc');
         } else if (option === 'ZA') {
             ordered = window.sortData(datatype, 'name', 'desc');
         } else if (option === 'NumUp') {
             ordered = window.sortData(datatype, 'num', 'asc');
         } else if (option === 'NumDown') {
             ordered = window.sortData(datatype, 'num', 'desc');
         }
         vaciar();
         imprimir(ordered);
     }, false);
         //buscar pokemones por nombre o numero
         document.getElementById('btnBuscar').addEventListener("click", (event) => {
             event.preventDefault();
             buscadorNombre = document.getElementById('buscador').value;
             if (isNaN(buscadorNombre) === true) {
                 buscadorNombre = MaysPrimera(buscadorNombre.toLowerCase());
                 let dataName = window.filterName(listaPokemones, buscadorNombre);
                 vaciar();
                 imprimir(dataName);
                 document.getElementById('noFound').innerHTML = '';
                 if(dataName == ''){
                    error = `<p id="error">Lo sentimos,"${buscadorNombre}" no fue encontrado.</p>`;
                    document.getElementById('noFound').innerHTML = error;
                    document.getElementById('calculo-agregado').innerHTML = '';
                 }
             } else {
                 let dataNum = window.filterNum(listaPokemones, buscadorNombre);
                 vaciar();
                 imprimir(dataNum);
                 document.getElementById('noFound').innerHTML = '';
             }
        });
             document.getElementById('calculo-agregado').innerHTML = '';
             document.getElementById('buscador').value = '';
             document.getElementById('buscador').focus();
         });
         //converir primera letra de string en mayuscula
         function MaysPrimera(string) {
             return string.charAt(0).toUpperCase() + string.slice(1);
         }
         document.getElementById('calculo-agregado').innerHTML = '';
         document.getElementById('buscador').value = '';
         document.getElementById('buscador').focus();
     
     //converir primera letra de string en mayuscula
     function MaysPrimera(string) {
         return string.charAt(0).toUpperCase() + string.slice(1);
     }
     //recargar la pagina
     document.getElementById('reload').addEventListener('click', () => {
         location.reload();
     })
     // modal de informacion
     document.getElementById('btnModalInfo').addEventListener('click', () => {
         let modalInfo = `<div aria-hidden="true" aria-labelledby="exampleModalScrollableTitle" class="modal fade" id="modalAbout" role="dialog" tabindex="-1">
                         <div class="modal-dialog modal-dialog-scrollable" role="document">
                             <div class="modal-content">
                                 <div class="modal-header">
                                     <h5 class="modal-title" id="exampleModalScrollableTitle">
                                     <i class="fas fa-info-circle">
                                     </i>
                                         PokéDex Info
                                     </h5>
                                     <button aria-label="Close" class="close" data-dismiss="modal" type="button">
                                         <span aria-hidden="true">
                                             ×
                                         </span>
                                     </button>
                                 </div>
                                 <div class="modal-body">
                                     En esta página podras encontrar informacion sobre los Pokémones de la región Kanto. Podrás hacer busquedas por nombre o ID de Pokémon y realizar un filtro de Pokémones por tipo.
                                 </div>
                             </div>
                         </div>
                     </div>`;

         document.getElementById('modalInfo').innerHTML = modalInfo;
     })


        ____________________________________

          /* Manejo de DOM */
  
  //DECLARAMOS NUESTROS ARRAY DEL JSON
  let dataPokemon = window.POKEMON.pokemon;
  let container = document.getElementById("container-result");
  const showAll = document.getElementById("root");
   //CONTENEDOR DONDE MOSTRAREMOS LA INFO
  const createCards = (data) => {
    let pokemonCard ='';
  //RECORREMOS EL ARRAY 
  data.forEach(pokemon => {
  //CREAMOS LA TARJETA CON LOS ELEMENTOS DEL ARRAY
  let card = `
  <div class="col-sm-6 col-md-4 my-3">
  <div class="card" style="width: 18rem;">
  <div class="card-body">
  <img src="${ pokemon.img }"/><br>
  <b>Nº </b>${ pokemon.num }<br>
  <b>${ pokemon.name }</b><br>
  <b>Tipo </b><br> ${ pokemon.type }</b><br>
  <b>Debilidades </b><br> ${ pokemon.weaknesses }<br>
  <b>Huevos </b><br> ${pokemon.egg }</b><br><br>
  </div>
  </div>
  </div>
  `;
  pokemonCard += card;
  })
  showAll.innerHTML=pokemonCard;
  }
  //MOSTRAMOS LA DATA DESDE EL JSON
  createCards(dataPokemon)
  

  //SELECT ORDENAR A-Z Y Z-A
  const selectSort = document.getElementById("orderPokemon")
  selectSort.addEventListener("change", () =>{
    let conditionSortBy= selectSort.options[selectSort.selectedIndex].getAttribute("sortby");
    let conditionOrderBy= selectSort.options[selectSort.selectedIndex].getAttribute("orderby");
    let sortedAlph=window.sorting(dataPokemon,conditionSortBy,conditionOrderBy);
    sortedAlph.forEach(()=>{
      return createCards(sortedAlph);
    })
})

_____________________________
/Declaración de Variables
const allPokemon = window.POKEMON.pokemon;
let containerBtnSearch = document.getElementById("btn_search");
let containerResult = document.getElementById("result");
let search;
let containerAZ = document.getElementById("a_z");
let containerZA = document.getElementById("z_a");
let container1To151 = document.getElementById("number1to151");
let container151To1 = document.getElementById("number151to1");
let containerSelect = document.getElementById("select_type");
let cardHTML = "";
//Función Crear Elementos html
const showElements = (data) => {
  for (let i = 0; i < data.length; i++){
    cardHTML +=
     `<div class="card " style="width: 200px;" data-toggle="modal" data-target="#exampleModalCenter" onclick="showModal(${data[i].id})">
  <img class="card-img-top" src=${data[i].img} alt="Card image cap">
  <div class="card-body">
    <h5 class="card-title">${data[i].name}</h5>
    <p class="card-text">#${data[i].num}.</p>
    <p class="card-text">Type: ${data[i].type}.</p>
  </div>
</div>`
  } containerResult.innerHTML = cardHTML;
  };


//Select de tipos
containerSelect.addEventListener("change", () => {
  cardHTML = "";
  search = containerSelect.value;
  showElements(window.pokemonData.filterData(allPokemon, search));
}); 

//Botón Ordenar por Nombre de A a Z
containerAZ.addEventListener("click", () => {
  cardHTML = "";
  showElements(window.pokemonData.sortData(allPokemon,"name", "increasing"));
});

//Botón Ordenar por Nombre de Z a A
containerZA.addEventListener("click", () => {
  cardHTML = "";
  showElements(window.pokemonData.sortData(allPokemon,"name", "decreasing"));
});

//Botón Ordenar por Nombre de 1 a 151
container1To151.addEventListener("click", () => {
  cardHTML = "";
  showElements(window.pokemonData.sortData(allPokemon,"num", "increasing"));
});

//Botón Ordenar por Nombre de 151 a 1
container151To1.addEventListener("click", () => {
  cardHTML = "";
  showElements(window.pokemonData.sortData(allPokemon,"num", "decreasing"));
});

//Función que pasa los datos de los pokemones al modal
const showModal = (id)=>{
  let poke = window.pokemonData.findPokemon(allPokemon, id);
  let type1 = poke[0].type[0];
  document.getElementById("modal_title").innerHTML=poke[0].name;
  document.getElementById("poke_img").src = poke[0].img;
  document.getElementById("poke_num").innerHTML="Number: "+ poke[0].num;
  document.getElementById("poke_type").innerHTML ="Types: "+ poke[0].type;
  document.getElementById("poke_height").innerHTML="Height: " + poke[0].height;
  document.getElementById("poke_weight").innerHTML="Weight: " + poke[0].weight;
  document.getElementById("poke_weaknesses").innerHTML= "Weaknesses: " + poke[0].weaknesses;
  document.getElementById("poke_statistics").innerHTML= "Un "+ window.pokemonData.computeStats(allPokemon, type1) + " de los Pokémons son de tipo " + poke[0].type[0];
  document.getElementById("percentage").innerHTML= poke[0].type[0] + " " + window.pokemonData.computeStats(allPokemon, type1)
};
window.showModal=showModal;

;